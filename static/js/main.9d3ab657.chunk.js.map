{"version":3,"sources":["state-machines/grinder.ts","components/ScreenReaderOnly.tsx","components/App.tsx","index.tsx"],"names":["grinderMachine","Machine","id","initial","states","empty","on","ACTIVATE","FILL","running_empty","after","2000","full","running_full","ScreenReaderOnly","children","style","styles","hide","clip","clipPath","height","overflow","position","whiteSpace","width","App","useMachine","current","send","useState","items","setItems","latestSectionRef","useRef","useEffect","next","matches","active","ref","undefined","disabled","onClick","prev","concat","timeoutId","setTimeout","scrollIntoView","clearTimeout","map","sectionFunc","index","length","ReactDOM","render","document","getElementById"],"mappings":"0LAiBaA,EAAiBC,YAAoD,CAChFC,GAAI,UACJC,QAAS,QACTC,OAAQ,CACNC,MAAO,CACLC,GAAI,CACFC,SAAU,gBACVC,KAAM,SAGVC,cAAe,CACbC,MAAO,CACLC,IAAM,UAGVC,KAAM,CACJN,GAAI,CACFC,SAAU,iBAGdM,aAAc,CACZH,MAAO,CACLC,IAAM,aCnCC,SAASG,EAAT,GAAgD,IAApBC,EAAmB,EAAnBA,SACzC,OAAO,sBAAMC,MAAOC,EAAOC,KAApB,SAA2BH,IAGpC,IAAME,EAAS,CACbC,KAAM,CACJC,KAAM,gBACNC,SAAU,aACVC,OAAQ,EACRC,SAAU,SACVC,SAAU,WACVC,WAAY,SACZC,MAAO,ICTI,SAASC,IAAO,IAAD,EACJC,YAAW3B,GADP,mBACrB4B,EADqB,KACZC,EADY,OAEFC,mBAAwB,IAFtB,mBAErBC,EAFqB,KAEdC,EAFc,KAGtBC,EAAmBC,iBAAoB,MAuD7C,OArDAC,qBAAU,WACR,IAAIC,EAEJ,QAAQ,GACN,KAAKR,EAAQS,QAAQ,SACnBD,EAAO,SAAClC,EAAIoC,GAAL,OACL,0BAAkBC,IAAKD,EAASL,OAAmBO,EAAnD,UACE,sEACCF,GAAU,cAACxB,EAAD,mCACX,wBAAQ2B,UAAWH,EAAQI,QAAS,kBAAMb,EAAK,SAA/C,qCACA,wBAAQY,UAAWH,EAAQI,QAAS,kBAAMb,EAAK,aAA/C,2BAJY3B,IAOhB,MAEF,KAAK0B,EAAQS,QAAQ,iBACnBD,EAAO,SAAClC,EAAIoC,GAAL,OACL,0BAAkBC,IAAKD,EAASL,OAAmBO,EAAnD,UACE,sHACA,wDAFYtC,IAKhB,MACF,KAAK0B,EAAQS,QAAQ,QACnBD,EAAO,SAAClC,EAAIoC,GAAL,OACL,0BAAkBC,IAAKD,EAASL,OAAmBO,EAAnD,UACE,qEACCF,GAAU,cAACxB,EAAD,kCACX,wBAAQ2B,UAAWH,EAAQI,QAAS,kBAAMb,EAAK,aAA/C,2BAHY3B,IAMhB,MACF,KAAK0B,EAAQS,QAAQ,gBACnBD,EAAO,SAAClC,EAAIoC,GAAL,OACL,0BAAkBC,IAAKD,EAASL,OAAmBO,EAAnD,UACE,kFACA,wDAFYtC,IAQpB8B,GAAS,SAACW,GAAD,OAAUA,EAAKC,OAAOR,EAAO,CAACA,GAAQ,OAE/C,IAAMS,EAAYC,YAAW,WACvBb,EAAiBL,SACnBK,EAAiBL,QAAQmB,mBAE1B,GAEH,OAAO,kBAAMC,aAAaH,MACzB,CAACjB,EAASC,IAGX,iCACE,yCACCE,EAAMkB,KAAI,SAACC,EAAaC,GAEvB,OAAOD,EAAYC,EADJA,IAAUpB,EAAMqB,OAAS,S,MChEhDC,IAASC,OAAO,cAAC5B,EAAD,IAAS6B,SAASC,eAAe,W","file":"static/js/main.9d3ab657.chunk.js","sourcesContent":["import { Machine } from 'xstate';\n\ninterface GrinderContext {}\n\ninterface GrinderState {\n  states: {\n    empty: {},\n    running_empty: {},\n    full: {},\n    running_full: {},\n  },\n}\n\ntype GrinderEvent =\n  | { type: 'ACTIVATE' }\n  | { type: 'FILL' }\n\nexport const grinderMachine = Machine<GrinderContext, GrinderState, GrinderEvent>({\n  id: 'grinder',\n  initial: 'empty',\n  states: {\n    empty: {\n      on: {\n        ACTIVATE: 'running_empty',\n        FILL: 'full',\n      },\n    },\n    running_empty: {\n      after: {\n        2000: 'empty',\n      },\n    },\n    full: {\n      on: {\n        ACTIVATE: 'running_full',\n      },\n    },\n    running_full: {\n      after: {\n        2000: 'empty',\n      },\n    },\n  },\n});\n","type Props = {\n  children: React.ReactNode;\n}\n\nexport default function ScreenReaderOnly({ children }: Props) {\n  return <span style={styles.hide}>{children}</span>;\n}\n\nconst styles = {\n  hide: {\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: 1,\n    overflow: 'hidden',\n    position: 'absolute' as const,\n    whiteSpace: 'nowrap' as const,\n    width: 1,\n  },\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { useMachine } from '@xstate/react';\nimport { grinderMachine } from '../state-machines/grinder';\nimport ScreenReaderOnly from './ScreenReaderOnly';\n\ntype SectionFunc = (id: number, active: boolean) => React.ReactNode;\n\nexport default function App() {\n  const [current, send] = useMachine(grinderMachine);\n  const [items, setItems] = useState<SectionFunc[]>([]);\n  const latestSectionRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    let next: SectionFunc;\n\n    switch (true) {\n      case current.matches('empty'): {\n        next = (id, active) => (\n          <section key={id} ref={active ? latestSectionRef : undefined}>\n            <p>The grinder sits silently. Patiently.</p>\n            {active && <ScreenReaderOnly>2 actions available:</ScreenReaderOnly>}\n            <button disabled={!active} onClick={() => send('FILL')}>Put beans in the hopper</button>\n            <button disabled={!active} onClick={() => send('ACTIVATE')}>Turn it on.</button>\n          </section>\n        );\n        break;\n      }\n      case current.matches('running_empty'):\n        next = (id, active) => (\n          <section key={id} ref={active ? latestSectionRef : undefined}>\n            <p>For some reason you ran the grinder despite the fact that there are no beans in it...</p>\n            <p>Bzzzzzzzzzzzzzzzzz...</p>\n          </section>\n        );\n        break;\n      case current.matches('full'):\n        next = (id, active) => (\n          <section key={id} ref={active ? latestSectionRef : undefined}>\n            <p>Now, finally, you're ready to grind.</p>\n            {active && <ScreenReaderOnly>1 action available:</ScreenReaderOnly>}\n            <button disabled={!active} onClick={() => send('ACTIVATE')}>Turn it on.</button>\n          </section>\n        );\n        break;\n      case current.matches('running_full'):\n        next = (id, active) => (\n          <section key={id} ref={active ? latestSectionRef : undefined}>\n            <p>The machine works diligently, grinding the beans.</p>\n            <p>Bzzzzzzzzzzzzzzzzz...</p>\n          </section>\n        );\n        break;\n    }\n\n    setItems((prev) => prev.concat(next ? [next] : []));\n\n    const timeoutId = setTimeout(() => {\n      if (latestSectionRef.current) {\n        latestSectionRef.current.scrollIntoView();\n      }\n    }, 0);\n\n    return () => clearTimeout(timeoutId);\n  }, [current, send]);\n\n  return (\n    <main>\n      <h1>Barista</h1>\n      {items.map((sectionFunc, index) => {\n        const active = index === items.length - 1;\n        return sectionFunc(index, active);\n      })}\n    </main>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}